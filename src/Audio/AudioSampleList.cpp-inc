/**
 * @file
 * The <C>AudioSampleList</C> body implements a simple list of
 * audio samples <I>(this is the effective code include file for
 * conditional inlining)</I>.
 *
 * @author Dr. Thomas Tensi
 * @date   2020-08
 */

/*=========*/
/* IMPORTS */
/*=========*/

using Audio::AudioSampleList;

/*====================*/

INLINE
String AudioSampleList::toString () const
{
    return _toString("AudioSampleList");
}

/*--------------------*/

INLINE
String AudioSampleList::toString (IN AudioSampleList& list)
{
    return list.toString();
}

/*--------------------*/

INLINE
void AudioSampleList::setToZero (IN Natural position,
                                 IN Natural count)
{
    const Natural currentLength = length();

    if (position < currentLength) {
        const Natural effectiveCount =
            Natural::minimum(currentLength - position, count);
        AudioSample* samplePtr = asArray(position);

        for (Natural i = 0;  i < effectiveCount;  i++) {
            *samplePtr++ = 0.0;
        }
    }
}
